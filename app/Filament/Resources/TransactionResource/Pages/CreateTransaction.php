<?php

namespace App\Filament\Resources\TransactionResource\Pages;

use App\Filament\Resources\TransactionResource;
use App\Models\TransactionItem;
use Filament\Actions;
use Filament\Resources\Pages\CreateRecord;
use Illuminate\Support\Carbon;

class CreateTransaction extends CreateRecord
{
    protected static string $resource = TransactionResource::class;

    protected function mutateFormDataBeforeCreate(array $data): array
    {
        $data['user_id'] = auth()->id();
        return parent::mutateFormDataBeforeCreate($data); // TODO: Change the autogenerated stub
    }

    protected function afterCreate(): void
    {
        $record = $this->record;

        $parcelas = $record->is_recurring ? $record->recurrence_interval : 1;

        $value = floor($record->amount / $parcelas);

        $remainingAmount = $record->amount - ($value * $parcelas);

        $date = $record->date;
        for($i = 0; $i < $parcelas; $i++) {

            $parcela = $i + 1;
            $currentAmount = $parcela == $parcelas ? $value + $remainingAmount : $value;

            $paymentDate = $parcela == 1 ? $date : $date->addMonths($parcela);
            TransactionItem::create([
                'transaction_id' => $record->id,
                'due_date' => $paymentDate,
                'amount' => $currentAmount,
                'installment_number' => $parcela,
                'status' => 'PENDING',
            ]);
        }
    }
}
